
#include <stdio.h>
#include <unistd.h>
#include <sys/types.h>
#include <ctype.h>
#include <string.h>
int main()
{
        char write_msg[25] = "Greetings";
        char read_msg[25];
        pid_t pid;
        int first_pipe[2];
        int second_pipe[2];
        if (pipe(first_pipe) == -1 || pipe(second_pipe) == -1)
        {
                return 1;
        }

        pid = fork();
        if (pid < 0)
        {
                return 1;
        }
        if (pid > 0)
        {
                close(first_pipe[0]);
                close(second_pipe[1]); 

                /*close the unused ends of each pipe */
                write(first_pipe[1], write_msg, strlen(write_msg) + 1);
                printf("The string length is %lu \n", strlen(write_msg) + 1);
                
                close(first_pipe[1]);

                wait(NULL);
                read(second_pipe[0], read_msg, 25);
                printf("Child done processing, recieved message in pipe: %s\n", read_msg);
                close(second_pipe[0]);
        
        }
        else
        {
                /*close the unused ends of the pipes*/
                close(first_pipe[1]);
                close(second_pipe[0]);

                /*read from the pipe*/
                read(first_pipe[0], read_msg, 25);
                printf("parent has sent: %s\n", read_msg);
                int i = 0;
                while (read_msg[i] != '\0')
                {
                        if (islower(read_msg[i]))
                                read_msg[i] = toupper(read_msg[i]);
                        else
                                read_msg[i] = tolower(read_msg[i]);
                        i++;
                }
                printf("Child has processed message into: %s\n", read_msg);
                write(second_pipe[1], read_msg, 25);
                close(first_pipe[0]);  
        }
        return 0;
}
