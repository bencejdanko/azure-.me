#include <stdio.h>
#include <unistd.h>
#include <sys/wait.h>

int main()
{
    pid_t pid;
    int status;

    pid = fork();

    if (pid < 0)
    {
        perror("fork failed");
        return 1;
    }
    else if (pid == 0)
    {
        printf("Child process id: %d\n", getpid());
        char *args[] = {"/bin/sh", "greetings.sh", NULL};
        execv("/bin/sh", args);

        perror("execv failed");
        return 1;
    }
    else
    {
        waitpid(pid, &status, 0);
        printf("Parent process id: %d\n", getpid());
        char *args[] = {"/bin/sh", "goodbye.sh", NULL};
        execv("/bin/sh", args);
        
        perror("execv failed");
        return 1;
    }
}